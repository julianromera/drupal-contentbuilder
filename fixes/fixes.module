<?php

/**
 * @file fixes.module
 * TODO: Enter file description here.
 */


/**
 * Implements hook_init
 * runs on every http request
 */
function fixes_init() {
   drupal_add_js(drupal_get_path('module', 'fixes').'/js/fixes.js', 'file');
}

/**
 * Implements hook_node_form_alter().
 */
/*
function fixes_form_event_form_alter(&$form, &$form_state, $form_id) {
   //hide "group type" and "roles and permissions"
   $form['group_group']['#access'] = FALSE;
   
   //hide option for public/private groups
   $form['group_access']['#access'] = FALSE;
   
   //hide the groups box for assigning content
   $form['group_audience']['#access'] = FALSE;
}
*/
/**
 * Implements hook_node_post_form_alter().
 */
/*
function fixes_form_event_form_alter(&$form, &$form_state, $form_id) {
   //hide "group type" and "roles and permissions"
   $form['group_group']['#access'] = FALSE;
   
   //hide option for public/private groups
   $form['group_access']['#access'] = FALSE;
   
   //hide the groups box for assigning content
   $form['group_audience']['#access'] = FALSE;
}
*/
/**
 * Implements hook_node_poll_form_alter().
 */
/*
function fixes_form_poll_form_alter(&$form, &$form_state, $form_id) {
   //hide "group type" and "roles and permissions"
   $form['group_group']['#access'] = FALSE;
   
   //hide option for public/private groups
   $form['group_access']['#access'] = FALSE;
   
   //hide the groups box for assigning content
   $form['group_audience']['#access'] = FALSE;
}
*/
/**
 * Implements hook_node_question_form_alter().
 */
/* 
function fixes_form_question_form_alter(&$form, &$form_state, $form_id) {
   //hide "group type" and "roles and permissions"
   $form['group_group']['#access'] = FALSE;
   
   //hide option for public/private groups
   $form['group_access']['#access'] = FALSE;
   
   //hide the groups box for assigning content
   $form['group_audience']['#access'] = FALSE;
}
*/
/**
 * Implements hook_node_answer_form_alter().
 */
/*
function fixes_form_answer_form_alter(&$form, &$form_state, $form_id) {
   //hide "group type" and "roles and permissions"
   $form['group_group']['#access'] = FALSE;
   
   //hide option for public/private groups
   $form['group_access']['#access'] = FALSE;
   
   //hide the groups box for assigning content
   $form['group_audience']['#access'] = FALSE;
}
*/
/**
 * Implements hook_node_form_alter().
 */
/*
function fixes_form_forum_form_alter(&$form, &$form_state, $form_id) {
   //hide "group type" and "roles and permissions"
   $form['group_group']['#access'] = FALSE;
   
   //hide option for public/private groups
   $form['group_access']['#access'] = FALSE;
   
   //hide the groups box for assigning content
   $form['group_audience']['#access'] = FALSE;
}
*/
/**
 * Implements hook_node_form_alter().
 */
function fixes_form_resourcedc_form_alter(&$form, &$form_state, $form_id) {
   //hide "group type" and "roles and permissions"
   $form['group_group']['#access'] = FALSE;
   
   //hide option for public/private groups
   $form['group_access']['#access'] = FALSE;
   
   //hide the groups box for assigning content
   $form['group_audience']['#access'] = FALSE;
}

/**
 * Implements hook_node_form_alter().
 */
function fixes_form_resource_agrisap_form_alter(&$form, &$form_state, $form_id) {
   //hide "group type" and "roles and permissions"
   $form['group_group']['#access'] = FALSE;
   
   //hide option for public/private groups
   $form['group_access']['#access'] = FALSE;
   
   //hide the groups box for assigning content
   $form['group_audience']['#access'] = FALSE;
}


/**
 * Implements hook_node_form_alter().
 * filter ALL node types
 */
function fixes_form_node_form_alter(&$form, &$form_state, $form_id) {
   //hide "group type" and "roles and permissions"
   $form['group_group']['#access'] = FALSE;
   
   //hide option for public/private groups
   $form['group_access']['#access'] = FALSE;
   
   //hide the groups box for assigning content
   $form['group_audience']['#access'] = FALSE;
}

/**
 * This function retrieves current count of Apache Solr Indexed documments
 */
function _voa3r_fixes_solrcount_helper() {
  
  $result_count = 0;
  
  $environment = "solr";
  try {
    $solr = apachesolr_get_solr($environment);
    $solr->clearCache();
    $data = $solr->getLuke();
    return $data->index->numDocs;
  }
  catch (Exception $e) {
    return 0;
  }
  return 0;
}


/**
 * Implementation of hook_form_FORMID_alter().
 * fix for search boxes placed in the header <-- seems not to be working!
 */
function fixes_form_apachesolr_search_custom_page_search_form_alter($form, &$form_state) {
  
    // echo print_r($form,TRUE);
    // drupal_goto("/");
    // $form['#token'] = FALSE;
    $form['#submit'][] = '_fixes_solr_search_pre_callback';
    return $form;
}
function _fixes_solr_search_pre_callback($form, &$form_state){
 //null
}